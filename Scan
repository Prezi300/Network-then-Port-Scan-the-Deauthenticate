#!/bin/python3

import socket
import threading
from queue import Queue
import time
from scapy.all import *

victims = []
target_ip = "192.168.0.1/24"
arp = ARP(pdst=target_ip)
ether = Ether(dst="ff:ff:ff:ff:ff:ff")
packet = ether / arp
result = srp(packet, timeout=3, verbose=0)[0]
clients = []
for sent, received in result:
    clients.append({'ip': received.psrc, 'mac': received.hwsrc})
print("Available devices in the network:")
print("IP" + " " * 18 + "MAC")
for client in clients:
    print("{:16}    {}".format(client['ip'], client['mac']))
    victims.append(f"{client['ip']}")

def ren(victim):
    a = []
    socket.setdefaulttimeout(0.25)
    print_lock = threading.Lock()
    target = victim#input('Enter the host to be scanned: ')
    t_IP = socket.gethostbyname(target)
    print('Starting scan on host: ', t_IP)

    def portscan(port):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            con = s.connect((t_IP, port))
            with print_lock:
                print(port, 'is open')
                a.append(port)
            con.close()
        except:
            pass

    def threader():
        while True:
            worker = q.get()
            portscan(worker)
            q.task_done()

    q = Queue()
    startTime = time.time()

    for x in range(100):
        t = threading.Thread(target=threader)
        t.daemon = True
        t.start()

    for worker in range(1, 500):
        q.put(worker)

    q.join()
    print('Time taken:', time.time() - startTime)
    return a

port_query = input("Do you wanna scan ports: ").lower()
if port_query == "yes":
    for i in victims:
        ren(i)
else:
    pass

de = input("Do you wanna deauthenticate?: ").lower()
if de == 'yes':
    subprocess.run(["C:/Users/Cooper/PycharmProjects/Attacker/pythoncodeDeauthenticate.py", "D8:C4:6A:B6:79:5E",
                    "2c:7e:81:87:59:08", "-c 10"], shell=True)
